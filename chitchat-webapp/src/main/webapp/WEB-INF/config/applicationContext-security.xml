<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true" create-session="ifRequired" disable-url-rewriting="true">
		<intercept-url pattern="/login.html" access="isAnonymous()" />
		<intercept-url pattern="/loginFailure.html" access="permitAll" />
		<intercept-url pattern="/logout.html" access="permitAll" />
		<intercept-url pattern="/register.html" access="isAnonymous()" />
		<intercept-url pattern="/profile/submitData**" access="permitAll" />
		
		<intercept-url pattern="/**" access="isAuthenticated()" />
		
		<form-login login-page="/login.html"
		    default-target-url="/profile"
			authentication-failure-url="/loginFailure.html" />
		<logout logout-success-url="/logout.html" delete-cookies="JSESSIONID" />
		<session-management session-fixation-protection="newSession">
		  <concurrency-control max-sessions="1"/>
		</session-management>
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="plaintext" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="userDetailsService"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url"
			value="jdbc:postgresql://localhost:5432/db_chitchat_security" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="password" />
	</beans:bean>
</beans:beans>

<!-- SQL query to create tables for spring security
CREATE TABLE public.users (
    username varchar(255) NOT NULL PRIMARY KEY,
    password varchar(255) NOT NULL,
    enabled boolean NOT NULL
);
CREATE TABLE public.authorities (
  username varchar(255) NOT NULL,
  authority varchar(255) NOT NULL,
  CONSTRAINT fk_authorities_users FOREIGN KEY (username)
      REFERENCES public.users (username) 
);
CREATE UNIQUE INDEX ix_username_authority ON public.authorities(username, authority);
 -->